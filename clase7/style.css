/* .container{
    border: 5px solid #e1bee7;
    background-color: #fff1ff;
    display: grid;
    grid-template-columns: 1fr 3fr 1fr 2fr;
    
} */
.item{
    border: 5px solid #00bcd4;
    font-size: 2rem;
}
/* min content max content, aqui la columna 3 se agrega min-content entonces la celda
se ajusta lo minimo al contenido sin da√±ar nada, y siempre esta en su minimo */
/* .container{
    border: 5px solid #e1bee7;
    background-color: #fff1ff;
    display: grid;
    grid-template-columns: 1fr 3fr min-content 2fr;
    
} */
/* en este ejmplo la columna 3 se le agrega max-content y este usa todo el espacio disponible en la celda 
y mantiene su ancho maximo en el responsive */
/* .container{
    border: 5px solid #e1bee7;
    background-color: #fff1ff;
    display: grid;
    grid-template-columns: 1fr 3fr max-content 2fr;
    
} */
/* las grillas toman todo su ancho 100%, contenedor columnas se espanden al 100%*/
.container{
    border: 5px solid #e1bee7;
    background-color: #fff1ff;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
}
/* auto-fill agrega columnas fantasma para tener ancho completo */
.container-2{
    border: 5px solid #e1bee7;
    background-color: #fff1ff;
    display: grid;
    margin-top: 100px;
    grid-template-columns: repeat(auto-fill,  minmax(100px, 1fr));
    
}